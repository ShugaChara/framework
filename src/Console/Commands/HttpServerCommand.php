<?php
// +----------------------------------------------------------------------
// | Created by linshan. 版权所有 @
// +----------------------------------------------------------------------
// | Copyright (c) 2020 All rights reserved.
// +----------------------------------------------------------------------
// | Technology changes the world . Accumulation makes people grow .
// +----------------------------------------------------------------------
// | Author: kaka梦很美 <1099013371@qq.com>
// +----------------------------------------------------------------------

namespace ShugaChara\Framework\Console\Commands;

use Exception;
use ShugaChara\Console\Command;
use ShugaChara\Framework\Contracts\StatusManagerInterface;
use ShugaChara\Framework\Swoole\ServerManager;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Class HttpServerCommand
 * @package ShugaChara\Framework\Console\Commands
 */
class HttpServerCommand extends Command implements StatusManagerInterface
{
    protected static $name = 'http';

    /**
     * 服务管理器
     * @var ServerManager
     */
    protected $serverManager;

    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub

        $this
            ->setName(self::$name)  // 命令的名称
            ->setDescription('创建一个swoole ' . self::$name . ' 服务器')  // 简短描述
            ->addArgument('status', InputArgument::OPTIONAL, '服务状态')
            ->addOption('daemon', 'd', InputOption::VALUE_NONE, '服务守护进程')
            ->addOption('force', '', InputOption::VALUE_NONE, '是否强制终止进程');
    }

    /**
     * @param InputInterface  $input
     * @param OutputInterface $output
     * @return int
     * @throws Exception
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $status = strtolower($input->getArgument('status')) ? : self::STATUS_NAME;
        $this->daemon = $input->hasParameterOption(['--daemon', '-d'], true) ? true : false;
        $this->force = $input->hasParameterOption(['--force'], true) ? true : false;
        if (in_array($status, self::STATUS_TYPES)) {
            $this->serverManager = ServerManager::getInstance();

            // 服务配置
            if (! $this->config = config()->get('swoole.' . SWOOLE_SERVER_HTTP, [])) {
                throw new Exception('请完成swoole配置才能启动服务');
            }

            // 服务守护进程
            if ($this->daemon) {
                $this->config['setting']['daemonize'] = $this->daemon;
            }

            $this->$status();

            return 1;
        }

        throw new Exception($status . ' 服务状态未定义,请通过 --help 查看命令');
    }

    public function status()
    {
        // TODO: Implement status() method.
    }

    public function start()
    {
        // TODO: Implement start() method.
    }

    public function stop()
    {
        // TODO: Implement stop() method.
    }

    public function reload()
    {
        // TODO: Implement reload() method.
    }

    public function restart()
    {
        // TODO: Implement restart() method.
    }
}

